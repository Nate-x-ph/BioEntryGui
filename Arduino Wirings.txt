Arduino w/ Ethernetshield W5100 Wiring Connections:

1. For LCD 1602

SDA - A4
SCL - A5
VCC - 5V
GND - GND

2. For Fingerprint A608

GREEN WIRE - GND
RED WIRE - 3V
BLACK WIRE - 2
YELLOW WIRE -3

3 For 4x3 Keypad

row pins    5, 7, 8, 9
column pins A2, A1, A0


4. For RFID Reader RC522

SDA (SS/CS) to Pin 4 (use pin 4 if your not using sd card on ethernet shield) avoid using pin 10 if ehternet shield is
attached to the arduino uno because it will cause conflicts. 
RST to Pin 6
SCK to Pin 13
MOSI to Pin 11
MISO to Pin 12
VCC(3.3V) to 3.3V 
GND to GND

5. For Buzzer

A3 - (Positive(+)) the one with longest pin
GND - GND


SOLINOID RELAY AND BUZZER CODE WITH LED LIGHTS AND PUSH BUTTON

#define RELAY_PIN 7       // Relay connected to pin 7
#define BUZZER_PIN A3     // Buzzer connected to pin A3
#define BUTTON_PIN 5      // Button connected to pin 5 and GND

// Define LED pins
#define YELLOW_LED 4     // Yellow LED connected to pin 4
#define GREEN_LED 3      // Green LED connected to pin 3
#define RED_LED 2        // Red LED connected to pin 2

void setup() {
  pinMode(RELAY_PIN, OUTPUT);  // Set relay pin as output
  pinMode(BUZZER_PIN, OUTPUT); // Set buzzer pin as output

  // Set button pin as input with internal pull-up resistor
  pinMode(BUTTON_PIN, INPUT_PULLUP);

  // Set LED pins as output
  pinMode(YELLOW_LED, OUTPUT);
  pinMode(GREEN_LED, OUTPUT);
  pinMode(RED_LED, OUTPUT);

  // Turn on yellow LED for standby
  digitalWrite(YELLOW_LED, HIGH);
  digitalWrite(GREEN_LED, LOW);
  digitalWrite(RED_LED, LOW);

  Serial.begin(9600);         // Start serial communication at 9600 baud
}

void loop() {
  // Read the state of the button (LOW means pressed)
  int buttonState = digitalRead(BUTTON_PIN);

  if (buttonState == LOW) {  // Button is pressed
    // Turn off yellow LED and turn on green LED
    digitalWrite(YELLOW_LED, LOW);
    digitalWrite(BUZZER_PIN, HIGH);
    delay(1000);
    digitalWrite(GREEN_LED, HIGH);
   
    // Activate the relay (unlock the solenoid lock)
    digitalWrite(RELAY_PIN, HIGH);
    
    // Beep twice
    for (int i = 0; i < 2; i++) {
      digitalWrite(BUZZER_PIN, HIGH);
      delay(100); // Buzzer on for 100 milliseconds
      digitalWrite(BUZZER_PIN, LOW);
      delay(100); // Wait for 100 milliseconds between beeps
    }

    delay(5000);  // Keep the relay on for 5 seconds

    // Turn off the relay and reset LEDs
    digitalWrite(RELAY_PIN, LOW);
    digitalWrite(GREEN_LED, LOW);
    digitalWrite(YELLOW_LED, HIGH);  // Back to standby
  }

  // Check for incoming serial data (as in your original code)
  if (Serial.available() > 0) {
    char command = Serial.read(); // Read the incoming data as a single byte

    if (command == '1') {
      digitalWrite(YELLOW_LED, LOW);
      digitalWrite(RED_LED, LOW);
      digitalWrite(GREEN_LED, HIGH);  // Turn on green LED

      // Double beep
      for (int i = 0; i < 2; i++) {
        digitalWrite(BUZZER_PIN, HIGH);
        delay(100); // Buzzer on for 100 milliseconds
        digitalWrite(BUZZER_PIN, LOW);
        delay(100); // Wait for 100 milliseconds between beeps
      }
    } 
    else if (command == '2') {
      // Activate the relay via serial command
      digitalWrite(RELAY_PIN, HIGH); // Turn relay ON
      digitalWrite(YELLOW_LED, LOW); // Turn off yellow during relay activation
      delay(5000); // Relay on for 5 seconds
      digitalWrite(RELAY_PIN, LOW);  // Turn relay OFF
      digitalWrite(YELLOW_LED, HIGH);  // Back to standby
      digitalWrite(GREEN_LED, LOW);
    }
    else if (command == '3') {
      // Handle invalid commands
      digitalWrite(YELLOW_LED, LOW);
      digitalWrite(GREEN_LED, LOW);
      digitalWrite(RED_LED, HIGH);  // Turn on red LED

      // Single beep for invalid command
      digitalWrite(BUZZER_PIN, HIGH);
      delay(500); // Buzzer on for 500 milliseconds
      digitalWrite(BUZZER_PIN, LOW);
      delay(500); // Wait for 500 milliseconds

      // Turn off red LED and return to standby (yellow LED on)
      digitalWrite(RED_LED, LOW);
      digitalWrite(YELLOW_LED, HIGH);  // Back to standby
    }
  }
}



